name: default

on:
  push:
    branches: [ main, devel ]
  pull_request:
    branches: [ main, devel ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04, ubuntu-24.04 ]
    steps:
    - uses: actions/checkout@v4
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Install Dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y libgl1-mesa-dev \
          libglfw3-dev libcairo2-dev libopencv-dev libglm-dev libncurses-dev
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: Configure CMake (Ubuntu 20.04)
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_AUTO_LAYOUT=OFF -DBUILD_TESTING=ON
    - name: Configure CMake (Ubuntu 22.04 or 24.04)
      if: ${{ matrix.os == 'ubuntu-22.04' || matrix.os == 'ubuntu-24.04' }}
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=ON
    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE && cpack

  minimal-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04, ubuntu-24.04 ]
    steps:
    - uses: actions/checkout@v4
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Install Dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y libgl1-mesa-dev \
          libglfw3-dev libglm-dev libcairo2-dev
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: Configure CMake (Ubuntu 20.04)
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_AUTO_LAYOUT=OFF -DBUILD_TESTING=ON
    - name: Configure CMake (Ubuntu 22.04 or 24.04)
      if: ${{ matrix.os == 'ubuntu-22.04' || matrix.os == 'ubuntu-24.04' }}
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=ON
    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE && cpack
#     - name: Test
#       working-directory: ${{runner.workspace}}/build
#       shell: bash
#       # Execute tests defined by the CMake configuration.  
#       # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#       run: ctest -C $BUILD_TYPE
